/* CSS Variables | Why ":root" idk thats just how things are okay? */


/* Font */
/* Carousel */


:root {
    --dark-pink: #FD93B3;
    --light-pink: #FAC5D4;
    --almost-white: #FEFAEE;
}

/* Reuse this * {} thing (the 4 lines) at the top of all your CSS files in the future. */
* {
    margin: 0;  /* Remove this to see what happens. If you even care. */
    padding: 0;  /* Most elements don't have a default padding value. Unlike margin. Removing this won't make a difference. */
    
    /* box-sizing: border-box;  IMPORTANT: this line is a big deal, removing it wont affect anything though
    (aside from the contact form modal) which is why i needed to add it 
    I really cant describe it on a comment, i would have to draw it. remind me. 
    (i prob wont forget and will have a drawing ready to show you tuesday so remind me to show you
    note for myself when i explain it to you so u can explain it . padding is applied inward, not outward. technically
    actually you probably shouldnt mention this. but if the professor asks and i didnt tell 
    you before hand, youre screwed. so yea
    /* nvm i dont need it... i typed all that for nothing. im just wasting your time. are you sitll reading this. no way. dumbahh jit */
    
}

body {
    background-color: var(--light-pink);
}

header {
    background-color: var(--dark-pink);
    border-bottom: 1px solid black;

    display: flex;
    flex-direction: row;  /* row is the default value of the "flex-direction". I'm just explcitly stating it and you should from now on */
    justify-content: space-between;
    align-items: center;
    padding: 25px 0px;
}

/* This font-size value here is not overridden by <a>'s font-size later due to .brand having a higher specificity weight. .brand is more specific */
/* .brand {} is a class selector | a {} is an element (tag) selector. 
You don't have to remember that. */
.brand {
    padding-left: 25px;
    font-size: 40px;
}


/* When using flex, you will only be using: 
flex-direction, 
justify-content (horizontal alignment), 
align-items (vertical alignment) */
ul {
    list-style-type: none;
    
    display: flex;
    flex-direction: row;
}

li {
    width: 150px;
    text-align: center;
}

header a {
    text-decoration: none; /* removes the underline that <a> tags always have */
    font-size: 25px;
    color: var(--almost-white);

    /* If you prefer a color change rather than underline on hover, lmk. I would have to add more than just these 2 lines. But this is so I don't forget */
    /*  
    
    display: inline-block;  <a> now respects width
    width: 100%; 
    */
}

/* The hover affect is only applied on a tags that are inside of ul tags */
ul a:hover {
    text-decoration: underline;  /* Where the decoraton will go */
    text-decoration-style: wavy;  /* How the decoraton will look */
}

/* Whenever working with img(s) just copy and paste this. */
/* width 100% makes the img take up 100% of its parent container's width. 
Height auto is used to maintain dimensions / ratio */

/* Delete this and the div tag in the html when no longer needed */


/* FOOTER */

footer {
    border-top: 1px solid black;
    background-color: var(--dark-pink);

    display: flex;
    flex-direction: row;  /* will be vertical on phone maybe */
    justify-content: space-between;
    align-items: center;
    padding: 25px 0px;
}

footer a {
    text-decoration: none;
    color: black;
}

footer a:hover {
    text-decoration: underline;
    text-decoration-style: wavy;
}

/* IMPORTANT: i did not do media quesries to make this form get smaller when shrinking screen.
it probably wouldnt be hard. actually this comment is outdated. but this is for future me possibly.  */

.form-container {
    /* the fieldset is there, but we cant see it. if you delete pointer-events,
    you can hover over the center and see your cursor change bc its detecting the visible content.
    very interesting wow */
    opacity: 0;
    pointer-events: none;

    width: 400px;
    border: 10px solid var(--dark-pink);
    padding: 25px;
    /* 
    Fixed removes the element from the document flow, allowing it to overlap on other items. 
    if basically takes up no space and does not exist to the elements on the doc flow.
    this is a very simple explanation, The more you explain the better for obvious reasons
    Top and Left at 50% place the top left corner of the div at the very center of the page, 
    but thats not the center of the actual div and its also not what we want. so transform fixes that
    */
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%); 
}

.form-container:target {
    opacity: 1;
    pointer-events: auto;
}

fieldset a {
    text-decoration: none;
    background-color: var(--light-pink);
    color: black;

    display: inline-block;

    margin-top: 25px;
    border: 2px solid var(--dark-pink);
    padding: 10px 25px;
    
}




/* END FOOTER */

/* Tablet */
@media only screen and (min-width: 768px) and (max-width: 1024px) {

    /* The ratio between the company name and navbar text is 8:5. And i decrement the left padding by 5 each time */
    header {
        padding: 20px 0px;
    }
    .brand {
        padding-left: 20px;
        font-size: 32px;
    }
    li {
        width: 125px;
    }
    header a {
        font-size: 20px;       
    }
}
    
/* Phone */
@media only screen and (max-width: 767px) {

    
    header {
        padding: 15px 0px;
    }
    .brand {
        padding-left: 15px;
        font-size: 24px;
    }
    li {
        width: 100px;
    }
    header a {
        font-size: 15px;       
    }
}
